// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eventbus.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterRequest struct {
	//app名称
	AppName string `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	//方法路径  bytes[0]:verison bytes[1]:resource bytes[2]:action
	MethodPath           []byte   `protobuf:"bytes,2,opt,name=method_path,json=methodPath,proto3" json:"method_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf5d638f5c8c3cc4, []int{0}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *RegisterRequest) GetMethodPath() []byte {
	if m != nil {
		return m.MethodPath
	}
	return nil
}

type RegisterResponse struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Code                 uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf5d638f5c8c3cc4, []int{1}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

func (m *RegisterResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type PipeRequest struct {
	Qid                  string   `protobuf:"bytes,1,opt,name=qid,proto3" json:"qid,omitempty"`
	Params               *any.Any `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipeRequest) Reset()         { *m = PipeRequest{} }
func (m *PipeRequest) String() string { return proto.CompactTextString(m) }
func (*PipeRequest) ProtoMessage()    {}
func (*PipeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf5d638f5c8c3cc4, []int{2}
}

func (m *PipeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeRequest.Unmarshal(m, b)
}
func (m *PipeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeRequest.Marshal(b, m, deterministic)
}
func (m *PipeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeRequest.Merge(m, src)
}
func (m *PipeRequest) XXX_Size() int {
	return xxx_messageInfo_PipeRequest.Size(m)
}
func (m *PipeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PipeRequest proto.InternalMessageInfo

func (m *PipeRequest) GetQid() string {
	if m != nil {
		return m.Qid
	}
	return ""
}

func (m *PipeRequest) GetParams() *any.Any {
	if m != nil {
		return m.Params
	}
	return nil
}

type PipeResponse struct {
	Code                 bool     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Params               *any.Any `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipeResponse) Reset()         { *m = PipeResponse{} }
func (m *PipeResponse) String() string { return proto.CompactTextString(m) }
func (*PipeResponse) ProtoMessage()    {}
func (*PipeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf5d638f5c8c3cc4, []int{3}
}

func (m *PipeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeResponse.Unmarshal(m, b)
}
func (m *PipeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeResponse.Marshal(b, m, deterministic)
}
func (m *PipeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeResponse.Merge(m, src)
}
func (m *PipeResponse) XXX_Size() int {
	return xxx_messageInfo_PipeResponse.Size(m)
}
func (m *PipeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PipeResponse proto.InternalMessageInfo

func (m *PipeResponse) GetCode() bool {
	if m != nil {
		return m.Code
	}
	return false
}

func (m *PipeResponse) GetParams() *any.Any {
	if m != nil {
		return m.Params
	}
	return nil
}

// Meta 统一接入请求解析参数集合，统一接入会解析其中的值，根据值将请求发送给相关的后端APP
type ClientComMeta struct {
	Resource             string   `protobuf:"bytes,1,opt,name=resource,json=res,proto3" json:"resource,omitempty"`
	Action               string   `protobuf:"bytes,2,opt,name=action,json=act,proto3" json:"action,omitempty"`
	Revision             string   `protobuf:"bytes,3,opt,name=revision,json=rev,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientComMeta) Reset()         { *m = ClientComMeta{} }
func (m *ClientComMeta) String() string { return proto.CompactTextString(m) }
func (*ClientComMeta) ProtoMessage()    {}
func (*ClientComMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf5d638f5c8c3cc4, []int{4}
}

func (m *ClientComMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientComMeta.Unmarshal(m, b)
}
func (m *ClientComMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientComMeta.Marshal(b, m, deterministic)
}
func (m *ClientComMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientComMeta.Merge(m, src)
}
func (m *ClientComMeta) XXX_Size() int {
	return xxx_messageInfo_ClientComMeta.Size(m)
}
func (m *ClientComMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientComMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ClientComMeta proto.InternalMessageInfo

func (m *ClientComMeta) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *ClientComMeta) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ClientComMeta) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterRequest)(nil), "eventbus.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "eventbus.RegisterResponse")
	proto.RegisterType((*PipeRequest)(nil), "eventbus.PipeRequest")
	proto.RegisterType((*PipeResponse)(nil), "eventbus.PipeResponse")
	proto.RegisterType((*ClientComMeta)(nil), "eventbus.ClientComMeta")
}

func init() { proto.RegisterFile("eventbus.proto", fileDescriptor_cf5d638f5c8c3cc4) }

var fileDescriptor_cf5d638f5c8c3cc4 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xb1, 0x4f, 0xc2, 0x40,
	0x14, 0xc6, 0x53, 0x4b, 0xb0, 0x3c, 0x40, 0xc9, 0x29, 0x06, 0xba, 0x48, 0x3a, 0x31, 0x98, 0x62,
	0x70, 0x72, 0x44, 0x66, 0x0c, 0xb9, 0xc1, 0x95, 0x1c, 0xed, 0x13, 0x9a, 0xd0, 0xde, 0xd1, 0x7b,
	0x25, 0x32, 0xfb, 0x8f, 0x9b, 0xde, 0xb5, 0x60, 0x88, 0x8b, 0xdb, 0xbb, 0xaf, 0x5f, 0x7f, 0xf7,
	0x7d, 0xef, 0xe0, 0x06, 0x0f, 0x98, 0xd1, 0xba, 0xd0, 0xa1, 0xca, 0x25, 0x49, 0xe6, 0xd5, 0x67,
	0x7f, 0xb8, 0x91, 0x72, 0xb3, 0xc3, 0x89, 0xd1, 0xd7, 0xc5, 0xe7, 0x44, 0x64, 0x47, 0x6b, 0x0a,
	0x16, 0x70, 0xcb, 0x71, 0x93, 0x68, 0xc2, 0x9c, 0xe3, 0xbe, 0x40, 0x4d, 0x6c, 0x08, 0x9e, 0x50,
	0x6a, 0x95, 0x89, 0x14, 0x07, 0xce, 0xc8, 0x19, 0xb7, 0xf8, 0xb5, 0x50, 0xea, 0x5d, 0xa4, 0xc8,
	0x1e, 0xa1, 0x9d, 0x22, 0x6d, 0x65, 0xbc, 0x52, 0x82, 0xb6, 0x83, 0xab, 0x91, 0x33, 0xee, 0x70,
	0xb0, 0xd2, 0x52, 0xd0, 0x36, 0xf8, 0x80, 0xde, 0x19, 0xa7, 0x95, 0xcc, 0x34, 0x32, 0x1f, 0x3c,
	0x11, 0x45, 0xa8, 0x08, 0x63, 0xc3, 0xf3, 0xf8, 0xe9, 0xcc, 0x18, 0x34, 0x22, 0x19, 0xa3, 0x21,
	0x75, 0xb9, 0x99, 0x4b, 0x8d, 0xf0, 0x8b, 0x06, 0xae, 0xb9, 0xdb, 0xcc, 0xc1, 0x02, 0xda, 0xcb,
	0x44, 0x61, 0x1d, 0xb1, 0x07, 0xee, 0x3e, 0x89, 0xab, 0x74, 0xe5, 0xc8, 0x9e, 0xa0, 0xa9, 0x44,
	0x2e, 0x52, 0x6d, 0x50, 0xed, 0xe9, 0x7d, 0x68, 0x3b, 0x87, 0x75, 0xe7, 0x70, 0x96, 0x1d, 0x79,
	0xe5, 0x09, 0x96, 0xd0, 0xb1, 0xb8, 0x2a, 0x62, 0x1d, 0xc3, 0xc6, 0xb3, 0x31, 0xfe, 0x47, 0xe4,
	0xd0, 0x9d, 0xef, 0x12, 0xcc, 0x68, 0x2e, 0xd3, 0x05, 0x92, 0x60, 0x7d, 0xf0, 0x72, 0xd4, 0xb2,
	0xc8, 0xa3, 0x7a, 0x8b, 0x6e, 0x8e, 0x9a, 0xdd, 0x41, 0x53, 0x44, 0x94, 0xc8, 0xcc, 0x50, 0x5b,
	0xdc, 0x15, 0x11, 0x59, 0xef, 0x21, 0xd1, 0xa5, 0xec, 0xd6, 0xde, 0xc3, 0xf4, 0xdb, 0x01, 0xf7,
	0xad, 0xd0, 0x6c, 0x06, 0x5e, 0xbd, 0x54, 0x36, 0x0c, 0x4f, 0xaf, 0x7c, 0xf1, 0x6e, 0xbe, 0xff,
	0xd7, 0xa7, 0xaa, 0xe0, 0x2b, 0x34, 0xca, 0xc2, 0xac, 0x7f, 0xf6, 0xfc, 0xda, 0xa7, 0xff, 0x70,
	0x29, 0xdb, 0xdf, 0xc6, 0xce, 0xb3, 0xb3, 0x6e, 0x9a, 0xbe, 0x2f, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x73, 0x48, 0x20, 0xba, 0x5f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BusClient is the client API for Bus service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BusClient interface {
	// APP向event bug 注册
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	Pipe(ctx context.Context, opts ...grpc.CallOption) (Bus_PipeClient, error)
}

type busClient struct {
	cc *grpc.ClientConn
}

func NewBusClient(cc *grpc.ClientConn) BusClient {
	return &busClient{cc}
}

func (c *busClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/eventbus.Bus/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busClient) Pipe(ctx context.Context, opts ...grpc.CallOption) (Bus_PipeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Bus_serviceDesc.Streams[0], "/eventbus.Bus/Pipe", opts...)
	if err != nil {
		return nil, err
	}
	x := &busPipeClient{stream}
	return x, nil
}

type Bus_PipeClient interface {
	Send(*PipeRequest) error
	Recv() (*PipeResponse, error)
	grpc.ClientStream
}

type busPipeClient struct {
	grpc.ClientStream
}

func (x *busPipeClient) Send(m *PipeRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *busPipeClient) Recv() (*PipeResponse, error) {
	m := new(PipeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BusServer is the server API for Bus service.
type BusServer interface {
	// APP向event bug 注册
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	Pipe(Bus_PipeServer) error
}

func RegisterBusServer(s *grpc.Server, srv BusServer) {
	s.RegisterService(&_Bus_serviceDesc, srv)
}

func _Bus_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eventbus.Bus/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bus_Pipe_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BusServer).Pipe(&busPipeServer{stream})
}

type Bus_PipeServer interface {
	Send(*PipeResponse) error
	Recv() (*PipeRequest, error)
	grpc.ServerStream
}

type busPipeServer struct {
	grpc.ServerStream
}

func (x *busPipeServer) Send(m *PipeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *busPipeServer) Recv() (*PipeRequest, error) {
	m := new(PipeRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Bus_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eventbus.Bus",
	HandlerType: (*BusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Bus_Register_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Pipe",
			Handler:       _Bus_Pipe_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "eventbus.proto",
}
